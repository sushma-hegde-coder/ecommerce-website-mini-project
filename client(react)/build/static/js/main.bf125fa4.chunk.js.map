{"version":3,"sources":["components/Column.tsx","components/Row.tsx","services/StorageService.ts","constants.ts","context.ts","services/UserService.ts","store/actions/CurrencyActions.ts","components/Currency.tsx","components/ThemeSwitch.tsx","components/Container.tsx","components/ErrorPage.tsx","components/PrivateRoute.tsx","components/LoadingWrapper.tsx","components/TextBox.tsx","store/actions/LoadingActions.ts","store/actions/UserActions.ts","utils/formatter.ts","containers/Login.tsx","components/ErrorBoundary.tsx","services/ProductService.ts","containers/ProductDetail.tsx","components/ImageWithFallback.tsx","components/ProductPrice.tsx","components/Product.tsx","store/actions/CartActions.ts","components/Paginate.tsx","containers/ProductList.tsx","Demo.tsx","AppRouter.tsx","components/Logo.tsx","components/Menu.tsx","components/SearchBox.tsx","services/MenuService.ts","containers/Header.tsx","components/LoginButtons.tsx","components/CartButton.tsx","App.tsx","reportWebVitals.ts","store/reducers/CartReducer.ts","store/reducers/CurrencyReducer.ts","store/reducers/UserReducer.ts","store/reducers/index.ts","store/reducers/LoadingReducer.ts","store/index.ts","index.tsx"],"names":["Column","classes","size","children","color","useContext","ThemeContext","cls","className","Row","props","domain","storeData","key","value","Promise","resolve","reject","sessionStorage","setItem","JSON","stringify","e","getData","getItem","parse","clearAll","clear","BASE_URL","React","createContext","login","email","password","url","constants","axios","post","catch","response","data","profile","StorageService","then","token","get","headers","Authorization","ActionTypes","UPDATE_CURRENCY","code","type","Currency","bgcolor","this","theme","onChange","currencyChange","target","map","c","Component","connect","dispatch","CurrencyActions","ThemeSwitch","useState","setTheme","useEffect","console","log","document","body","onClick","thm","themeChange","Container","fluid","ErrorPage","to","PrivateRoute","component","rest","isAuthenticated","useSelector","store","userSession","user","RoutedComponent","render","location","pathname","state","from","LoadingWrapper","loading","style","visibility","width","height","role","TextBox","label","textChange","placeholder","setValue","touched","setTouched","onBlur","trim","SHOW_LOADER","HIDE_LOADER","SIGN_IN_SUCCESS","SIGN_IN_ERROR","SIGN_OUT","UserActions","loginError","error","loginSuccess","logout","str","toLowerCase","split","word","replace","toUpperCase","join","Number","parseInt","toFixed","current","last","decimal","Math","abs","Login","a","preventDefault","showLoader","UserService","access_token","signinSuccess","hideLoader","signinError","formatter","message","toString","lastPage","errorMessage","onSubmit","setState","err","LoadingActions","ErrorBoundary","hasError","errorInfo","page","id","ProductDetail","params","match","ProductService","ImageWithFallback","source","imgSrc","setDefault","src","onError","ProductPrice","price","salePrice","Product","stock","disabled","btnClick","pdata","currencyCode","wishlist","productId","productImage","productName","productPrice","productSalePrice","renderStock","productStock","ADD_TO_CART","REMOVE_ITEM","product","Paginate","totalPages","changePage","currentPage","selected","setSelected","pages","Array","fill","aria-label","p","i","ProductList","plist","pageNumber","updateData","addItem","history","push","val","addToCart","selectedCurrency","currency","CartActions","Demo","no","count","nextProps","nextState","prevState","LazyProfile","lazy","AppRouter","Suspense","fallback","path","exact","Logo","fontSize","Menu","menuData","item","menuLink","activeClassName","menuItem","SearchBox","Header","menuItems","MenuService","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","LoginButtons","auth","useDispatch","useHistory","CartButton","cartItems","cart","length","data-count","App","currentCurrency","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","cartReducer","action","productQty","filter","prod","currencyReducer","initialState","userReducer","rootReducer","combineReducers","appStore","createStore","composeWithDevTools","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bf125fa4.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\nimport { ThemeContext } from \"../context\";\n\ntype Props = {\n  size: number;\n  classes?: string;\n};\n\nconst Column: React.FC<Props> = ({ classes, size, children }) => {\n  const theme = useContext(ThemeContext);\n  const color = theme === \"dark\" ? \"text-light\" : \"text-dark\";\n  const cls = `col-md-${size}`;\n  return <div className={`${cls} ${color} ${classes}`}>{children}</div>;\n};\nexport default Column;\n","import React from \"react\";\n\nconst Row: React.FC = (props) => {\n  return <div className=\"row\">{props.children}</div>;\n};\nexport default Row;\n","const domain = \"@shopapp\";\nconst storeData = (key: string, value: string) => {\n  return new Promise((resolve, reject) => {\n    try {\n      sessionStorage.setItem(`${domain}:${key}`, JSON.stringify(value));\n      resolve(\"stored\");\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nconst getData = (key: string) => {\n  return new Promise((resolve, reject) => {\n    try {\n      const value = sessionStorage.getItem(`${domain}:${key}`);\n      if (!value) throw \"no data\";\n      resolve(JSON.parse(value));\n    } catch (e) {\n      reject(e);\n    }\n  });\n};\n\nconst clearAll = () => sessionStorage.clear();\n\nexport default { storeData, getData, clearAll };\n","export default {\n  BASE_URL: `http://localhost:5000`,\n};\n","import React from \"react\";\n\nexport const ThemeContext = React.createContext<string>(\"light\");\n","import axios from \"axios\";\nimport constants from \"../constants\";\nimport { LoginResponseType } from \"../types\";\nimport StorageService from \"./StorageService\";\n\nconst login = (email: string, password: string) => {\n  const url = `${constants.BASE_URL}/auth/login`;\n  return axios\n    .post<LoginResponseType>(url, { email, password })\n    .catch((e) => Promise.reject(e.response.data));\n};\n\nconst profile = () => {\n  const url = `${constants.BASE_URL}/auth/profile`;\n  return StorageService.getData(\"token\").then((token) =>\n    axios.get(url, {\n      headers: { Authorization: `Bearer ${token}` },\n    })\n  );\n};\n\nexport default { login, profile };\n","const ActionTypes = {\n  UPDATE_CURRENCY: \"[Currency] Update Currency\",\n};\n\nconst updateCurrency = (code: string) => {\n  return {\n    type: ActionTypes.UPDATE_CURRENCY, // required, unique\n    code, // payload (optional)\n  };\n};\n\nexport default { updateCurrency, ActionTypes };\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport CurrencyActions from \"../store/actions/CurrencyActions\";\n\ntype CurrencyProps = {\n  currencyChange: (code: string) => void;\n  theme?: \"light\" | \"dark\";\n};\n\nclass Currency extends React.Component<CurrencyProps> {\n  render() {\n    const codes = [\"INR\", \"USD\", \"CAD\", \"GBP\", \"EUR\"];\n    const bgcolor = this.props.theme === \"dark\" ? \"text-light\" : \"text-dark\";\n    return (\n      <select\n        onChange={(e) => this.props.currencyChange(e.target.value)}\n        className={`form-control-sm ${bgcolor} bg-${this.props.theme}`}\n      >\n        {codes.map((c) => (\n          <option key={c}>{c}</option>\n        ))}\n      </select>\n    );\n  }\n}\n// connect(what data to fetch from the store, what data to update inside the store)(component)\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    currencyChange: (code: string) =>\n      dispatch(CurrencyActions.updateCurrency(code)),\n  };\n};\nexport default connect(null, mapDispatchToProps)(Currency);\n","import React, { useEffect, useState } from \"react\";\n\ntype Props = {\n  themeChange: (theme: \"light\" | \"dark\") => void;\n};\n// pure component by default\nconst ThemeSwitch: React.FC<Props> = (props) => {\n  // state, setState : useState\n  // let [state_variable,setState]=useState(initial_value); // single state\n  let [theme, setTheme] = useState(\"light\");\n  // mounting, updating, unmounting\n  // useEffect(effect_function, dependencies that will trigger the effect_function)\n  useEffect(() => {\n    console.log(\"USE EFFECT CALLED\");\n    document.body.className = \"bg-\" + theme; // side effect\n  }, [theme]);\n\n  const updateTheme = () => {\n    let thm: \"light\" | \"dark\" = theme === \"dark\" ? \"light\" : \"dark\";\n    setTheme(thm);\n    props.themeChange(thm);\n  };\n\n  return (\n    <button onClick={updateTheme} className=\"btn theme-buttons\">\n      {theme === \"dark\" ? (\n        <i className=\"text-warning fas fa-sun\"></i>\n      ) : (\n        <i className=\"text-secondary fas fa-moon\"></i>\n      )}\n    </button>\n  );\n};\nexport default ThemeSwitch;\n","import React from \"react\";\n\nconst Container: React.FC<{ fluid?: boolean }> = ({ children, fluid }) => {\n  const cls = fluid ? \"container-fluid\" : \"container\";\n  return <div className={cls}>{children}</div>;\n};\nexport default Container;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Column from \"./Column\";\nimport Container from \"./Container\";\n\nfunction ErrorPage() {\n  return (\n    <div className=\"error-page-wrap d-flex flex-row align-items-center\">\n      <Container>\n        <div className=\"row justify-content-center\">\n          <Column size={12} classes=\"text-center\">\n            <i className=\"fa-5x text-danger fas fa-exclamation-triangle mb-4\"></i>\n            <span className=\"display-1 d-block\">\n              4<i className=\"fas fa-sad-tear text-warning\"></i>4\n            </span>\n            <div className=\"mb-2 lead text-muted\">\n              Oops! The page you are looking for was not found.\n            </div>\n            <Link to=\"/\" className=\"btn btn-outline-primary my-4\">\n              Back to <i className=\"fas fa-home fa-2x\"></i>\n            </Link>\n          </Column>\n        </div>\n      </Container>\n    </div>\n  );\n}\nexport default ErrorPage;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Route, Redirect, RouteProps } from \"react-router-dom\";\nimport { StoreType } from \"../types\";\nconst PrivateRoute: React.FC<RouteProps> = ({ component, ...rest }) => {\n  // extracting component prop & whatever is remaining is kept inside\n  const isAuthenticated = useSelector<StoreType>(\n    (store) => !!store.userSession.user\n  );\n  // let isAuthenticated = false; // get the auth status\n  const RoutedComponent = component as React.FunctionComponent;\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          <RoutedComponent />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location.pathname },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\nexport default PrivateRoute;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { StoreType } from \"../types\";\n\nconst LoadingWrapper: React.FC<{}> = ({ children }) => {\n  const loading = useSelector<StoreType>((store) => store.loading);\n  return (\n    <>\n      <div\n        className=\"loader-overlay\"\n        style={{ visibility: loading ? \"visible\" : \"hidden\" }}\n      >\n        <div\n          className=\"spinner-border text-primary\"\n          style={{\n            width: \"3rem\",\n            height: \"3rem\",\n          }}\n          role=\"status\"\n        >\n          <span className=\"visually-hidden\">Loading...</span>\n        </div>\n      </div>\n      {children}\n    </>\n  );\n};\nexport default LoadingWrapper;\n","import React, { useEffect, useState } from \"react\";\n\ntype Props = {\n  label?: string;\n  type: \"text\" | \"password\" | \"email\";\n  textChange: (value: string) => void;\n  placeholder?: string;\n};\nconst TextBox: React.FC<Props> = ({ label, type, textChange, placeholder }) => {\n  const [value, setValue] = useState(\"\");\n  const [touched, setTouched] = useState(false);\n\n  useEffect(() => {\n    textChange(value);\n  }, [value]);\n\n  return (\n    <div className=\"form-group my-4\">\n      {label ? <label>{label}</label> : null}\n      <input\n        type={type}\n        className=\"form-control\"\n        value={value}\n        placeholder={placeholder}\n        onBlur={() => setTouched(true)}\n        onChange={(e) => setValue(e.target.value)}\n      />\n      {touched && value.trim() === \"\" ? (\n        <small className=\"text-danger\">This field is required</small>\n      ) : null}\n    </div>\n  );\n};\nexport default TextBox;\n","const ActionTypes = {\n  SHOW_LOADER: \"[Loading] Show\",\n  HIDE_LOADER: \"[Loading] Hide\",\n};\n\nconst showLoader = () => {\n  return { type: ActionTypes.SHOW_LOADER };\n};\n\nconst hideLoader = () => {\n  return { type: ActionTypes.HIDE_LOADER };\n};\n\nexport default {\n  showLoader,\n  hideLoader,\n  ActionTypes,\n};\n","const ActionTypes = {\n  SIGN_IN_SUCCESS: \"[User] Login success\",\n  SIGN_IN_ERROR: \"[User] Login error\",\n  SIGN_OUT: \"[User] Logout\",\n};\n\nconst loginSuccess = (user: object) => {\n  return {\n    type: ActionTypes.SIGN_IN_SUCCESS,\n    user,\n  };\n};\nconst loginError = (error: string) => {\n  return {\n    type: ActionTypes.SIGN_IN_ERROR,\n    error,\n  };\n};\nconst logout = () => {\n  return { type: ActionTypes.SIGN_OUT };\n};\n\nconst UserActions = { loginError, loginSuccess, logout, ActionTypes };\nexport default UserActions;\n","export default {\n  titlecase: (str: string) =>\n    str\n      .toLowerCase()\n      .split(\" \")\n      .map(function (word) {\n        return word.replace(word[0], word[0].toUpperCase());\n      })\n      .join(\" \"),\n  price: (value: string, code = \"INR\") =>\n    `${code} ${Number.parseInt(value).toFixed(2)}`,\n  discount: (current: string, last: string, decimal = 1) =>\n    Math.abs(((Number(current) - Number(last)) / Number(last)) * 100).toFixed(\n      decimal\n    ) + \"%\",\n};\n","import React, { SyntheticEvent } from \"react\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Redirect } from \"react-router-dom\";\nimport { Dispatch } from \"redux\";\nimport Column from \"../components/Column\";\nimport LoadingWrapper from \"../components/LoadingWrapper\";\nimport Row from \"../components/Row\";\nimport TextBox from \"../components/TextBox\";\nimport StorageService from \"../services/StorageService\";\nimport UserService from \"../services/UserService\";\nimport LoadingActions from \"../store/actions/LoadingActions\";\nimport UserActions from \"../store/actions/UserActions\";\nimport { StoreType } from \"../types\";\nimport formatter from \"../utils/formatter\";\ntype LoginProps = {\n  signinSuccess: (user: object) => void;\n  signinError: (error: string) => void;\n  showLoader: () => void;\n  hideLoader: () => void;\n  isAuthenticated: boolean;\n  errorMessage: string | null;\n} & RouteComponentProps;\ntype LoginState = { email: string; password: string };\nclass Login extends React.Component<LoginProps, LoginState> {\n  state: LoginState = { email: \"\", password: \"\" };\n  login = async (e: SyntheticEvent) => {\n    try {\n      e.preventDefault();\n      const { email, password } = this.state;\n      this.props.showLoader();\n      const { data } = await UserService.login(email, password);\n      await StorageService.storeData(\"token\", data.access_token);\n      this.props.signinSuccess(data); // create/store session\n      this.props.hideLoader();\n    } catch (e) {\n      this.props.signinError(formatter.titlecase(e.message.toString()));\n      this.props.hideLoader();\n    }\n  };\n  render() {\n    if (this.props.isAuthenticated) {\n      let lastPage = \"/\"; // by default home page\n      const state: any = this.props.location.state;\n      if (state && state.from) {\n        lastPage = state.from; // last page path\n      }\n      return <Redirect to={lastPage} />;\n    }\n    return (\n      <LoadingWrapper>\n        <Row>\n          <Column\n            size={4}\n            classes={\n              \"offset-md-4 shadow-sm border p-4 text-center rounded mt-5\"\n            }\n          >\n            <h2>Login</h2>\n            <hr />\n            <small className=\"text-danger\">{this.props.errorMessage}</small>\n            <form onSubmit={this.login}>\n              <TextBox\n                placeholder={\"Email\"}\n                type={\"email\"}\n                textChange={(email) => this.setState({ email })}\n              />\n              <TextBox\n                placeholder={\"Password\"}\n                type={\"password\"}\n                textChange={(password) => this.setState({ password })}\n              />\n              <button className={\"btn btn-success w-100 text-uppercase\"}>\n                Login\n              </button>\n            </form>\n          </Column>\n        </Row>\n      </LoadingWrapper>\n    );\n  }\n}\nconst mapStoreDataToProps = (storeData: StoreType) => {\n  return {\n    isAuthenticated: !!storeData.userSession.user, // converting to boolean\n    errorMessage: storeData.userSession.error,\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    signinSuccess: (user: object) => dispatch(UserActions.loginSuccess(user)),\n    signinError: (err: string) => dispatch(UserActions.loginError(err)),\n    hideLoader: () => dispatch(LoadingActions.hideLoader()),\n    showLoader: () => dispatch(LoadingActions.showLoader()),\n  };\n};\nexport default connect(mapStoreDataToProps, mapDispatchToProps)(Login);\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  state = { hasError: false };\n  static getDerivedStateFromError(error: any) {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n  componentDidCatch(error: any, errorInfo: any) {\n    // You can also log the error to an error reporting service\n    console.log(error, errorInfo);\n  }\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;\n","import axios from \"axios\";\nimport constants from \"../constants\";\nimport { ProductResponseType, ProductType } from \"../types\";\n\nconst getProducts = (page = 1) => {\n  const url = `${constants.BASE_URL}/product?page=${page}`;\n  return axios.get<ProductResponseType>(url);\n};\n\nconst getProductById = (id: string) => {\n  const url = `${constants.BASE_URL}/product/${id}`;\n  return axios.get<ProductType>(url);\n};\n\nexport default { getProducts, getProductById };\n","import React from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport Column from \"../components/Column\";\nimport ErrorBoundary from \"../components/ErrorBoundary\";\nimport Row from \"../components/Row\";\nimport ProductService from \"../services/ProductService\";\n\nclass ProductDetail extends React.Component<RouteComponentProps> {\n  async componentDidMount() {\n    try {\n      const params: any = this.props.match.params;\n      const { data } = await ProductService.getProductById(params.id);\n      console.log(\"success\", data);\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n  render() {\n    return (\n      <ErrorBoundary>\n        <Row>\n          <Column size={12}>\n            <h1>Product Detail</h1>\n          </Column>\n        </Row>\n      </ErrorBoundary>\n    );\n  }\n}\nexport default ProductDetail;\n","import React, { useState } from \"react\";\n\ntype Props = { source: string };\n\nconst ImageWithFallback: React.FC<Props> = ({ source }) => {\n  let [imgSrc, setDefault] = useState(source);\n  return (\n    <img\n      src={imgSrc}\n      onError={() =>\n        setDefault(\n          \"https://upload.wikimedia.org/wikipedia/commons/thumb/a/ac/No_image_available.svg/600px-No_image_available.svg.png\"\n        )\n      }\n      className=\"img-thumbnail\"\n    />\n  );\n};\nexport default ImageWithFallback;\n","import React from \"react\";\nimport formatter from \"../utils/formatter\";\n\ntype Props = {\n  price: string;\n  salePrice: string;\n  code?: string;\n};\n\nconst ProductPrice: React.FC<Props> = ({ price, salePrice, code }) => {\n  return (\n    <div className=\"d-flex align-items-center justify-content-center my-2\">\n      <span>{formatter.price(salePrice, code)}</span>\n      {salePrice !== price ? (\n        <>\n          <small className=\"text-muted mx-2\">\n            <del>{formatter.price(price, code)}</del>\n          </small>\n          <small className=\"badge rounded-pill bg-success\">\n            {formatter.discount(salePrice, price)}\n          </small>\n        </>\n      ) : (\n        <small className=\"badge rounded-pill bg-warning mx-2\">\n          <i className=\"fas fa-award\"></i> New\n        </small>\n      )}\n    </div>\n  );\n};\nexport default ProductPrice;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { ProductType } from \"../types\";\nimport formatter from \"../utils/formatter\";\nimport ImageWithFallback from \"./ImageWithFallback\";\nimport ProductPrice from \"./ProductPrice\";\n\ntype ProductProps = {\n  pdata: ProductType;\n  wishlist?: boolean;\n  currencyCode: string;\n  btnClick: () => void;\n};\nclass Product extends React.Component<ProductProps> {\n  renderStock(stock: number) {\n    if (stock <= 0) {\n      return (\n        <button disabled className=\"btn btn-sm w-100 btn-danger text-uppercase\">\n          <i className=\"far fa-frown\"></i>Out of stock\n        </button>\n      );\n    }\n    return (\n      <button\n        onClick={() => this.props.btnClick()}\n        className=\"btn btn-sm w-100 btn-primary text-uppercase\"\n      >\n        <i className=\"fab fa-opencart\"></i> Add to Cart\n      </button>\n    );\n  }\n  render() {\n    const { pdata, wishlist, currencyCode } = this.props;\n    return (\n      <div className=\"p-4 shadow-sm text-center\">\n        <Link to={`/productdetail/${pdata.productId}`}>\n          <ImageWithFallback source={pdata.productImage} />\n        </Link>\n        <h5 className={\"mt-4\"}>{formatter.titlecase(pdata.productName)}</h5>\n        <ProductPrice\n          price={pdata.productPrice}\n          salePrice={pdata.productSalePrice}\n          code={currencyCode}\n        />\n        {/* <button>Add to {wishlist ? \"Wishlist\" : \"Cart\"}</button> */}\n        {this.renderStock(pdata.productStock)}\n      </div>\n    );\n  }\n}\nexport default Product;\n","import { ProductType } from \"../../types\";\n\nconst ActionTypes = {\n  ADD_TO_CART: \"[Cart] Add to cart\",\n  REMOVE_ITEM: \"[Cart] Remove item\",\n};\n\nconst addToCart = (product: ProductType) => {\n  return {\n    type: ActionTypes.ADD_TO_CART,\n    product,\n  };\n};\nconst removeItem = (id: number) => {\n  return {\n    type: ActionTypes.REMOVE_ITEM,\n    id,\n  };\n};\nexport default { ActionTypes, addToCart, removeItem };\n","import React, { useState } from \"react\";\n\ntype Props = {\n  totalPages: number;\n  currentPage: number;\n  changePage: (pageno: number) => void;\n};\nconst Paginate: React.FC<Props> = ({ totalPages, currentPage, changePage }) => {\n  const [selected, setSelected] = useState(0);\n  const pages = Array(totalPages).fill(0);\n  return (\n    <div className=\"btn-group me-2\" role=\"group\" aria-label=\"First group\">\n      {pages.map((p, i) => (\n        <button\n          type=\"button\"\n          className={`btn btn-sm ${\n            selected === i ? \"btn-primary\" : \"btn-outline-primary\"\n          }`}\n          key={i}\n          onClick={() => {\n            changePage(i + 1);\n            setSelected(i);\n          }}\n        >\n          {i + 1}\n        </button>\n      ))}\n    </div>\n  );\n};\nexport default Paginate;\n","import React from \"react\";\nimport Column from \"../components/Column\";\nimport Product from \"../components/Product\";\nimport Row from \"../components/Row\";\nimport ProductService from \"../services/ProductService\";\nimport { ProductType, StoreType } from \"../types\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport CartActions from \"../store/actions/CartActions\";\nimport Paginate from \"../components/Paginate\";\nimport LoadingWrapper from \"../components/LoadingWrapper\";\nimport LoadingActions from \"../store/actions/LoadingActions\";\n\ntype Props = {\n  selectedCurrency: string;\n  showLoader: () => void;\n  hideLoader: () => void;\n  addItem: (product: ProductType) => void;\n} & RouteComponentProps;\ntype State = { plist: ProductType[]; totalPages: number; pageNumber: number };\nclass ProductList extends React.Component<Props, State> {\n  state: State = { plist: [], totalPages: 0, pageNumber: 1 };\n  componentDidMount() {\n    this.getData();\n  }\n  async getData() {\n    try {\n      this.props.showLoader();\n      const { data } = await ProductService.getProducts(this.state.pageNumber);\n      this.setState({\n        plist: data.data,\n        totalPages: data.totalPages,\n        pageNumber: data.currentPage,\n      });\n      this.props.hideLoader();\n    } catch (e) {\n      console.log(\"error\", e);\n      this.props.hideLoader();\n    }\n  }\n  addToCart(product: ProductType) {\n    this.props.addItem(product); // add to cart logic\n    this.props.history.push(\"/cart\"); // redirect to cart page\n  }\n  updateData = (page: number) =>\n    this.setState({ pageNumber: page }, () => this.getData());\n  render() {\n    return (\n      <LoadingWrapper>\n        <Row>\n          {this.state.plist.map((val) => (\n            <Column size={3} classes={\"my-3\"}>\n              <Product\n                btnClick={() => this.addToCart(val)}\n                pdata={val}\n                key={val.productId}\n                currencyCode={this.props.selectedCurrency}\n              />\n            </Column>\n          ))}\n          <Column size={12} classes={\"text-center\"}>\n            <Paginate\n              totalPages={this.state.totalPages}\n              currentPage={this.state.pageNumber}\n              changePage={this.updateData}\n            />\n          </Column>\n        </Row>\n      </LoadingWrapper>\n    );\n  }\n}\n// connect(how to connect)(what to connect/component)\n// store data can be accessed thru the props of the component\nconst mapStoreToProps = (store: StoreType) => {\n  return {\n    selectedCurrency: store.currency, // undefined => INR => USD\n  };\n};\nconst mapDispatchToProps = (dispatch: Dispatch) => {\n  return {\n    hideLoader: () => dispatch(LoadingActions.hideLoader()),\n    showLoader: () => dispatch(LoadingActions.showLoader()),\n    addItem: (p: ProductType) => dispatch(CartActions.addToCart(p)),\n  };\n};\nexport default connect(mapStoreToProps, mapDispatchToProps)(ProductList);\n","import React from \"react\";\nimport Column from \"./components/Column\";\n\ntype State = { no: number; count: number };\nclass Demo extends React.Component<{}, State> {\n  state: State = { no: 0, count: 0 };\n  shouldComponentUpdate(nextProps: {}, nextState: State) {\n    console.log(\"SHOULD COMPONENT UPDATE\");\n    console.log(\"PROPS\", this.props, nextProps);\n    console.log(\"STATE\", this.state, nextState);\n    return this.state.no !== nextState.no || nextState.count === 7;\n  }\n  render() {\n    console.log(\"RENDER CALLED\", this.state);\n    const name = \"Mike\";\n    return (\n      <div className=\"row\">\n        <Column size={12}>\n          <h1>Demo Component</h1>\n          <p>Some html content</p>\n          {this.state.count > 6 ? <p>Hello from {name.toUpperCase()}</p> : null}\n          <p>{7 + 3}</p>\n          <button\n            onClick={() => this.setState({ no: 1 })}\n            className=\"btn btn-sm btn-primary mx-2\"\n          >\n            Change state to 1\n          </button>\n          <button\n            onClick={() => this.setState({ no: 0 })}\n            className=\"btn btn-sm btn-primary mx-2\"\n          >\n            Change state to 0\n          </button>\n          <button\n            className=\"btn btn-sm btn-primary mx-2\"\n            onClick={() =>\n              this.setState((prevState) => ({ count: prevState.count + 1 }))\n            }\n          >\n            Increment count\n          </button>\n        </Column>\n      </div>\n    );\n  }\n}\nexport default Demo;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Container from \"./components/Container\";\nimport ErrorPage from \"./components/ErrorPage\";\nimport PrivateRoute from \"./components/PrivateRoute\";\nimport Login from \"./containers/Login\";\nimport ProductDetail from \"./containers/ProductDetail\";\nimport ProductList from \"./containers/ProductList\";\n// import Profile from \"./containers/Profile\";\nimport Demo from \"./Demo\";\n\nconst LazyProfile = React.lazy(() => import(\"./containers/Profile\"));\n\nconst AppRouter: React.FC = (props) => {\n  return (\n    <main>\n      <Container fluid>\n        <React.Suspense fallback={<div>Loading...</div>}>\n          <Switch>\n            <Route path={\"/\"} component={Demo} exact />\n            <Route path={\"/products\"} component={ProductList} />\n            <Route path={\"/login\"} component={Login} />\n            <PrivateRoute path={\"/profile\"} component={LazyProfile} />\n            <Route path={\"/productdetail/:id\"} component={ProductDetail} />\n\n            {/* 404 Route */}\n            <Route component={ErrorPage} />\n          </Switch>\n        </React.Suspense>\n      </Container>\n    </main>\n  );\n};\nexport default AppRouter;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Logo() {\n  return (\n    <Link className=\"navbar-brand text-primary\" to=\"/\">\n      <i className=\"fas fa-dragon\" style={{ fontSize: \"1.2em\" }}></i> Store\n    </Link>\n  );\n}\n","import React from \"react\";\nimport { MenuType } from \"../types\";\nimport { NavLink } from \"react-router-dom\";\n\ntype Props = {\n  menuData: MenuType[];\n};\n\nconst Menu: React.FC<Props> = ({ menuData }) => {\n  return (\n    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n      {menuData.map((item) => (\n        <li className=\"nav-item\" key={item.menuLink}>\n          <NavLink\n            className=\"nav-link\"\n            to={item.menuLink}\n            activeClassName=\"active\"\n            exact\n          >\n            {item.menuItem}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default Menu;\n","import React from \"react\";\ntype Props = {};\n\nconst SearchBox: React.FC<Props> = () => {\n  return (\n    <form className=\"d-flex\">\n      <input\n        className=\"form-control me-2\"\n        type=\"search\"\n        placeholder=\"Search\"\n        aria-label=\"Search\"\n      />\n    </form>\n  );\n};\nexport default SearchBox;\n","import axios from \"axios\";\nimport { MenuType } from \"../types\";\n\nconst getMenuData = () => {\n  const url = \"/menu.json\";\n  return axios.get<MenuType[]>(url);\n};\n\nexport default { getMenuData };\n","import React from \"react\";\nimport Container from \"../components/Container\";\nimport Logo from \"../components/Logo\";\nimport Menu from \"../components/Menu\";\nimport SearchBox from \"../components/SearchBox\";\nimport MenuService from \"../services/MenuService\";\nimport { MenuType } from \"../types\";\n\ntype Props = {\n  theme: string;\n};\ntype State = {\n  menuItems: MenuType[];\n};\n\nclass Header extends React.Component<Props, State> {\n  state: State = { menuItems: [] };\n  async componentDidMount() {\n    try {\n      const { data } = await MenuService.getMenuData();\n      this.setState({ menuItems: data });\n    } catch (e) {\n      console.log(\"error\", e);\n    }\n  }\n  render() {\n    const { theme } = this.props;\n    return (\n      <nav\n        className={`fixed-top navbar navbar-expand-lg navbar-${theme} bg-${theme} shadow-sm`}\n      >\n        <Container fluid>\n          <Logo />\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <Menu menuData={this.state.menuItems} />\n            <SearchBox />\n            {this.props.children}\n          </div>\n        </Container>\n      </nav>\n    );\n  }\n}\nexport default Header;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport StorageService from \"../services/StorageService\";\nimport UserActions from \"../store/actions/UserActions\";\nimport { StoreType } from \"../types\";\n\nconst LoginButtons: React.FC = (props) => {\n  // const store = useStore<StoreType>();\n  const auth = useSelector((store: StoreType) => !!store.userSession.user);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  if (auth) {\n    return (\n      <>\n        <Link className=\"btn btn-link\" to={\"/profile\"}>\n          Profile\n        </Link>\n        <button\n          className=\"btn btn-sm btn-outline-primary mx-2\"\n          onClick={() => {\n            StorageService.clearAll();\n            dispatch(UserActions.logout());\n            history.push(\"/\"); // redirect\n          }}\n        >\n          Logout\n        </button>\n      </>\n    );\n  }\n  return (\n    <Link className=\"btn btn-sm btn-outline-primary mx-2\" to={\"/login\"}>\n      Login\n    </Link>\n  );\n};\nexport default LoginButtons;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { StoreType } from \"../types\";\n\nconst CartButton = () => {\n  const cartItems = useSelector<StoreType>((store) => store.cart.length);\n  return (\n    <Link to={\"/cart\"}>\n      <span className=\"fa-stack has-badge\" data-count={cartItems}>\n        <i className=\"fa fa-circle fa-stack-2x\"></i>\n        <i className=\"fa fa-shopping-cart fa-stack-1x fa-inverse\"></i>\n      </span>\n    </Link>\n  );\n};\nexport default CartButton;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Demo from \"./Demo\";\nimport Product from \"./components/Product\";\nimport ProductList from \"./containers/ProductList\";\nimport Currency from \"./components/Currency\";\nimport Checkout from \"./containers/Checkout\";\nimport ThemeSwitch from \"./components/ThemeSwitch\";\nimport { ThemeContext } from \"./context\";\nimport AppRouter from \"./AppRouter\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport Header from \"./containers/Header\";\nimport LoginButtons from \"./components/LoginButtons\";\nimport CartButton from \"./components/CartButton\";\ntype State = {\n  currentCurrency: string;\n  theme: \"light\" | \"dark\";\n};\nclass App extends React.Component<{}, State> {\n  state: State = { currentCurrency: \"INR\", theme: \"light\" };\n  render() {\n    const { theme } = this.state;\n    return (\n      <BrowserRouter>\n        <Header theme={theme}>\n          <CartButton />\n          <ThemeSwitch themeChange={(theme) => this.setState({ theme })} />\n          <Currency theme={theme} />\n          <LoginButtons />\n        </Header>\n        <ThemeContext.Provider value={theme}>\n          <AppRouter />\n          {/* <Demo />\n          <ProductList selectedCurrency={this.state.currentCurrency} /> */}\n        </ThemeContext.Provider>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { CartType, ProductType } from \"../../types\";\nimport { Action } from \"redux\";\nimport CartActions from \"../actions/CartActions\";\ntype IAction = {\n  product: ProductType;\n  id: number;\n} & Action;\n// state : initialise, immutable\nfunction cartReducer(store: CartType[] = [], action: IAction) {\n  switch (action.type) {\n    case CartActions.ActionTypes.ADD_TO_CART:\n      return [...store, { ...action.product, productQty: 1 }];\n    case CartActions.ActionTypes.REMOVE_ITEM:\n      return store.filter((prod) => prod.productId !== action.id);\n    default:\n      return store;\n  }\n}\nexport default cartReducer;\n","import { Action } from \"redux\";\nimport CurrencyActions from \"../actions/CurrencyActions\";\n\n// reducer(store_data,action)\n// state : initialise\ntype IAction = {\n  code: string;\n} & Action;\nfunction currencyReducer(store = \"INR\", action: IAction) {\n  switch (action.type) {\n    case CurrencyActions.ActionTypes.UPDATE_CURRENCY:\n      return action.code;\n    default:\n      //return current_store_data;\n      return store;\n  }\n}\nexport default currencyReducer;\n","import { Action } from \"redux\";\nimport { UserSessionType } from \"../../types\";\nimport UserActions from \"../actions/UserActions\";\n\ninterface IAction extends Action {\n  user?: object;\n  error?: string;\n}\nconst initialState: UserSessionType = { user: null, error: null };\nfunction userReducer(\n  storeData: UserSessionType = initialState,\n  action: IAction\n): any {\n  switch (action.type) {\n    case UserActions.ActionTypes.SIGN_IN_SUCCESS:\n      return { error: null, user: action.user };\n    case UserActions.ActionTypes.SIGN_IN_ERROR:\n      return { user: null, error: action.error };\n    case UserActions.ActionTypes.SIGN_OUT:\n      return initialState;\n    default:\n      return storeData;\n  }\n}\nexport default userReducer;\n","import { combineReducers } from \"redux\";\nimport { StoreType } from \"../../types\";\nimport cartReducer from \"./CartReducer\";\nimport currencyReducer from \"./CurrencyReducer\";\nimport loadingReducer from \"./LoadingReducer\";\nimport userReducer from \"./UserReducer\";\n\nconst rootReducer = combineReducers<StoreType>({\n  // data: reducer\n  currency: currencyReducer,\n  cart: cartReducer,\n  userSession: userReducer,\n  loading: loadingReducer,\n});\n\nexport default rootReducer;\n","import { Action } from \"redux\";\nimport LoadingActions from \"../actions/LoadingActions\";\n\nexport default function loadingReducer(store: boolean = false, action: Action) {\n  switch (action.type) {\n    case LoadingActions.ActionTypes.HIDE_LOADER:\n      return false;\n    case LoadingActions.ActionTypes.SHOW_LOADER:\n      return true;\n    default:\n      return store;\n  }\n}\n","import { createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\n\nconst appStore = createStore(rootReducer, composeWithDevTools());\n\nexport default appStore;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport appStore from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={appStore}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}